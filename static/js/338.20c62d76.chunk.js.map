{"version":3,"file":"static/js/338.20c62d76.chunk.js","mappings":"yPAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,KAA5B,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASA,SAASG,SAA5B,EAIvBC,EAAwB,SAAAL,GACnC,IAAMC,EAAWF,EAAeC,GAC1BM,EAVa,SAAAN,GAAK,OAAIA,EAAMC,SAASK,MAAnB,CAUTC,CAAaP,GAC5B,OAAOC,EAASK,QAAO,qBAAGE,KAAgBC,cAAcC,SAASJ,EAA1C,GACxB,E,UCoFD,MAxFA,WACE,IAAMK,GAAWC,EAAAA,EAAAA,MACXX,GAAWY,EAAAA,EAAAA,IAAYd,GAuBzBe,EAAeC,EAAAA,EAAAA,cAGnB,OACE,UAACA,EAAA,gBAAD,CAAmBC,MAAOF,EAA1B,WACE,SAACC,EAAA,aAAD,CAAgBE,QAAQ,KAAKC,UAAW,SAAxC,SAAkD,iBAGlD,UAACH,EAAA,YAAD,CAAeI,UAAU,OAAOC,SAAS,KAAzC,WACE,SAACL,EAAA,cAAD,KACA,SAACA,EAAA,MAAD,CACEM,GAAI,CAEFC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,UASE,UAACT,EAAA,MAAD,CAASI,UAAU,OAAOM,YAAU,EAACC,SAxCxB,SAAAC,GACnBA,EAAEC,iBAEF,IAAMpB,EAAOmB,EAAEE,OAAOC,SAAStB,KAAKuB,MACpC,GAAI9B,EAAS+B,MAAK,SAAAC,GAAE,OAAIA,EAAGzB,OAASA,CAAhB,IAMlB,OALA0B,IAAAA,OAAAA,QACE,SAAW1B,EAAO,2CAGpBmB,EAAEE,OAAOM,QAGX,IAAMC,EAAST,EAAEE,OAAOC,SAASM,OAAOL,MAClCM,EAAa,CACjBC,IAAIC,EAAAA,EAAAA,MACJ/B,KAAAA,EACA4B,OAAAA,GAEFzB,GAAS6B,EAAAA,EAAAA,IAAWH,IACpBV,EAAEE,OAAOM,OACV,EAoBoEd,GAAI,CAAEoB,GAAI,GAAvE,WACE,UAAC1B,EAAA,OAAD,CAAU2B,WAAS,EAACC,QAAS,EAA7B,WACE,SAAC5B,EAAA,OAAD,CAAU6B,MAAI,EAACC,GAAI,GAAnB,UACE,SAAC9B,EAAA,YAAD,CACE+B,UAAQ,EACRC,WAAS,EACTT,GAAG,OACHU,KAAK,OACLxC,KAAK,OACLyC,MAAM,OACNC,QAAQ,yHACRC,MAAM,yIACNC,aAAa,aAGjB,SAACrC,EAAA,OAAD,CAAU6B,MAAI,EAACC,GAAI,GAAnB,UACE,SAAC9B,EAAA,YAAD,CACE+B,UAAQ,EACRC,WAAS,EACTT,GAAG,MACHU,KAAK,MACLxC,KAAK,SACLyC,MAAM,QACNC,QAAQ,yFACRC,MAAM,+FACNC,aAAa,uBAInB,SAACrC,EAAA,SAAD,CACEiC,KAAK,SACLD,WAAS,EACT9B,QAAQ,YACRI,GAAI,CAAEoB,GAAI,EAAGY,GAAI,GAJnB,SAKC,kBAQZ,EC/CD,MAvCA,YAA4C,IAArB7C,EAAoB,EAApBA,KAAM4B,EAAc,EAAdA,OAAQE,EAAM,EAANA,GAC7B3B,GAAWC,EAAAA,EAAAA,MAKjB,OACE,SAACG,EAAA,MAAD,CACEM,GAAI,CACFC,QAAS,OACTgC,SAAU,OACV,kBAAmB,CACjBC,EAAG,EAEHC,OAAQ,IACRC,QAAS,IARf,UAYE,UAAC1C,EAAA,QAAD,CAAW2C,UAAW,EAAtB,WACE,SAAC3C,EAAA,aAAD,CAAgBI,UAAU,KAAKF,QAAQ,KAAK0C,MAAM,SAAlD,SACGnD,KAEH,SAACO,EAAA,aAAD,CAAgBI,UAAU,IAAIwC,MAAM,SAApC,SACGvB,KAEH,SAACrB,EAAA,SAAD,CAAYE,QAAQ,WAAW2C,QAxBpB,WACfjD,GAASkD,EAAAA,EAAAA,IAAcvB,GACxB,EAsBK,SAAkD,eAOzD,ECzBD,MAXA,WACE,IAAMwB,GAAkBjD,EAAAA,EAAAA,IAAYR,GACpC,OACE,SAACU,EAAA,OAAD,CAAU2B,WAAS,EAACC,QAAS,CAAEE,GAAI,EAAGkB,GAAI,GAAKC,QAAS,CAAEnB,GAAI,EAAGoB,GAAI,EAAGF,GAAI,IAA5E,SACGD,EAAgBI,KAAI,gBAAG1D,EAAH,EAAGA,KAAM8B,EAAT,EAASA,GAAIF,EAAb,EAAaA,OAAb,OACnB,SAAC,EAAD,CAAaE,GAAIA,EAAaF,OAAQA,EAAQ5B,KAAMA,GAA1B8B,EADP,KAK1B,E,UCWD,MArBA,WACE,IAAM3B,GAAWC,EAAAA,EAAAA,MAIjB,OACE,+BACE,SAACG,EAAA,MAAD,CAAS0B,GAAI,EAAb,UACE,SAAC1B,EAAA,YAAD,CACEgC,WAAS,EACTT,GAAG,SACHU,KAAK,OACLxC,KAAK,SACLyC,MAAM,gBACNkB,SAZmB,SAAAxC,GACzBhB,GAASyD,EAAAA,EAAAA,GAAUzC,EAAEE,OAAOE,MAAMtB,cAAc4D,QACjD,OAeF,E,UCdc,SAASC,IACtB,IAAM3D,GAAWC,EAAAA,EAAAA,MACXR,GAAYS,EAAAA,EAAAA,IAAYV,GAK9B,OAJAoE,EAAAA,EAAAA,YAAU,WACR5D,GAAS6D,EAAAA,EAAAA,MACV,GAAE,CAAC7D,KAGF,0BAME,SAACI,EAAA,MAAD,CAASM,GAAI,CAAEoD,SAAU,GAAzB,UACA,UAAC1D,EAAA,OAAD,CAAU2B,WAAS,EAACC,QAAS,EAAGqB,QAAS,GAAzC,WACE,UAACjD,EAAA,OAAD,CAAU6B,MAAI,EAACC,GAAI,EAAnB,WACI,SAAC,EAAD,KACA,SAAC,EAAD,QAEF,UAAC9B,EAAA,OAAD,CAAU6B,MAAI,EAACC,GAAI,EAAnB,WACE,SAAC,EAAD,IACCzC,IAAa,uBAAG,wBAO5B,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["const selectFilter = state => state.contacts.filter;\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.contacts.error;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n};\n","import { nanoid } from '@reduxjs/toolkit';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport MUI from 'components/MUI';\n\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const name = e.target.elements.name.value;\n    if (contacts.find(el => el.name === name)) {\n      Notiflix.Notify.warning(\n        'Name \"' + name + '\" already exists in the phone book'\n      );\n\n      e.target.reset();\n      return;\n    }\n    const number = e.target.elements.number.value;\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    dispatch(addContact(newContact));\n    e.target.reset();\n  };\nconst defaultTheme = MUI.createTheme();\n\n\n  return (\n    <MUI.ThemeProvider theme={defaultTheme}>\n      <MUI.Typography variant=\"h5\" textAlign={'center'}>\n        Add contact\n      </MUI.Typography>\n      <MUI.Container component=\"main\" maxWidth=\"xs\">\n        <MUI.CssBaseline />\n        <MUI.Box\n          sx={{\n            // marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          \n          <MUI.Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <MUI.Grid container spacing={2}>\n              <MUI.Grid item xs={12}>\n                <MUI.TextField\n                  required\n                  fullWidth\n                  id=\"name\"\n                  type=\"text\"\n                  name=\"name\"\n                  label='Name'\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  autoComplete=\"email\"\n                />\n              </MUI.Grid>\n              <MUI.Grid item xs={12}>\n                <MUI.TextField\n                  required\n                  fullWidth\n                  id=\"tel\"\n                  type=\"tel\"\n                  name=\"number\"\n                  label='Phone'\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  autoComplete=\"new-password\"\n                />\n              </MUI.Grid>\n            </MUI.Grid>\n            <MUI.Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Add\n            </MUI.Button>\n          </MUI.Box>\n        </MUI.Box>\n      </MUI.Container>\n    </MUI.ThemeProvider>\n  );\n}\n\nexport default ContactForm;\n\n\n","import { deleteContact } from 'redux/contacts/operations';\nimport MUI from 'components/MUI';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\n\n\n\nfunction ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const onDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <MUI.Box\n      sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          // width: 128,\n          height: 128,\n          padding: 2,\n        },\n      }}\n    >\n      <MUI.Paper elevation={6} >\n        <MUI.Typography component=\"h1\" variant=\"h5\" align='center'>\n          {name}\n        </MUI.Typography>\n        <MUI.Typography component=\"p\" align='center'>\n          {number}\n        </MUI.Typography>\n        <MUI.Button variant=\"outlined\" onClick={onDelete}>\n          Delete\n        </MUI.Button>\n\n      </MUI.Paper>\n    </MUI.Box>\n  );\n}\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import MUI from 'components/MUI';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux//contacts/selectors';\n\nfunction ContactList() {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <MUI.Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n      {visibleContacts.map(({ name, id, number }) => (\n        <ContactItem id={id} key={id} number={number} name={name} />\n      ))}\n    </MUI.Grid>\n  );\n}\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport MUI from 'components/MUI';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const handleChangeFilter = e => {\n    dispatch(setFilter(e.target.value.toLowerCase().trim()));\n  };\n  return (\n    <>\n      <MUI.Box mt={3}>\n        <MUI.TextField\n          fullWidth\n          id=\"filter\"\n          type=\"text\"\n          name=\"filter\"\n          label='Find contacts'\n          onChange={handleChangeFilter}\n        />\n      </MUI.Box>\n    </>\n  );\n}\n\nexport default Filter;\n","import MUI from 'components/MUI';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {/* <h2>Contacts</h2> */}\n      {/* <ContactForm />\n      <Filter />\n      <ContactList />\n      {isLoading && <p>Loading...</p>} */}\n      <MUI.Box sx={{ flexGrow: 1 }}>\n      <MUI.Grid container spacing={2} columns={16}>\n        <MUI.Grid item xs={5}>\n            <ContactForm />\n            <Filter />\n        </MUI.Grid>\n          <MUI.Grid item xs={8}>\n            <ContactList />\n            {isLoading && <p>Loading...</p>}\n        </MUI.Grid>\n      </MUI.Grid>\n    </MUI.Box>\n      \n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","filter","selectFilter","name","toLowerCase","includes","dispatch","useDispatch","useSelector","defaultTheme","MUI","theme","variant","textAlign","component","maxWidth","sx","display","flexDirection","alignItems","noValidate","onSubmit","e","preventDefault","target","elements","value","find","el","Notiflix","reset","number","newContact","id","nanoid","addContact","mt","container","spacing","item","xs","required","fullWidth","type","label","pattern","title","autoComplete","mb","flexWrap","m","height","padding","elevation","align","onClick","deleteContact","visibleContacts","md","columns","sm","map","onChange","setFilter","trim","Contacts","useEffect","fetchContacts","flexGrow"],"sourceRoot":""}